package com.CRM.minicrm.controller;

import java.net.URI;
import java.util.List;

import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Repository;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.CRM.minicrm.model.Cliente;
import com.CRM.minicrm.model.Contato;
import com.CRM.minicrm.repository.ClienteRepository;
import com.CRM.minicrm.repository.ContatoRepository;

@RestController
@RequestMapping("/clientes")
public class ClienteController {
	
	
	private final ClienteRepository clienteRepository;
	private final ContatoRepository contatoRepository;
	
	public ClienteController(ClienteRepository clienteRepository, ContatoRepository contatoRepository) {
		
		this.clienteRepository = clienteRepository;
		this.contatoRepository = contatoRepository;
	}
	
	@PostMapping
	public ResponseEntity<Cliente> criarCliente(@RequestBody Cliente payload){
		Cliente cliente = clienteRepository.save(payload);
		return ResponseEntity.created(URI.create("/criente/" + cliente.getId())).body(cliente);
		
	}
	
	@GetMapping
	public ResponseEntity<List<Cliente>> listarClientes(){
		return ResponseEntity.ok(clienteRepository.findAll());
	}
	
	@PostMapping("/{id}/contatos")		
	public ResponseEntity<Contato> criarContato(@PathVariable Long id, @RequestBody Contato payload){
		var opt = clienteRepository.findById(id);
		if(opt.isEmpty()) return ResponseEntity.notFound().build();
		
		var cliente = opt.get();
		 payload.setId(null);
		 payload.setCliente(cliente);
		 var salvo = contatoRepository.save(payload);
		 return ResponseEntity.created(URI.create("/cliente/"+id"/contatos/"+salvo.getId())).body(salvo);
		 
		
	}
	

}
